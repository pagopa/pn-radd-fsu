AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  ApiDnsName:
    Type: String
    Description: 'The DNS name used for B2B rest API.'

  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  SandboxSafeStorageBaseUrl:
    Type: String
    Description: 'Url to the SafeStorage microservice'

  SafeStorageCxId:
    Type: String
    Description: 'SafeStorage cx-id'

  AttemptBatchWriter:
    Type: String
    Description: 'Number of attempt for unprocessed item writer'
    Default: 3

  SafeStorageDocType:
    Type: String
    Description: 'SafeStorage document-type'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'

  RaddTransactionDynamoTableName:
    Type: String
    Description: 'Name of dynamodb table containing radd transaction'

  RaddTransactionDynamoTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing radd transaction'

  OperationsDynamoTableName:
    Type: String
    Description: 'Name of dynamodb table containing iuns and operations'

  OperationsDynamoTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing iuns and operations'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  AlbSecurityGroup:
    Type: String
    Description: 'Application load balancer security group'

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: ''
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

  # Log group parameters
  EcsLogGroup:
    Type: String
    Description: 'Ecs log group name'

  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'

  # Heath Check parameters
  HealthCheckInterval:
    Description: Seconds between two health check
    Type: Number
    Default: 60

  HealthCheckTimeout:
    Description: health check timeout seconds
    Type: Number
    Default: 5
  
  HealthyThresholdCount:
    Description: |
      The number of consecutive health checks successes required before considering 
      an unhealthy target healthy. 
    Type: Number
    Default: 5
  
  UnhealthyThresholdCount:
    Description: |
      The number of consecutive health check failures required before considering a target unhealthy. 
    Type: Number
    Default: 2

  # Instance parameters
  # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
  # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
  # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
  # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
  # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
  CpuValue:
    Type: Number
    Default: 1024
    Description: Fargate virtual CPU quantity 1024 equals one vCPU

  # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
  # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
  # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
  # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
  # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
  MemoryAmount:
    Type: String
    Default: 2GB
    Description: memory amount reserved to the task pod.
    AllowedValues: [ 2GB, 4GB, 6GB, 8GB ]

  # Autoscaling parameters
  AutoscalingCheckPeriod:
    Default: 60
    Type: Number
    Description: minimum autoscaling number of tasks\

  AutoscalingDataPointN:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingDataPointM:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingThreshold:
    Default: 70
    Type: String
  
  MinTasksNumber:
    Default: 1
    Type: Number
    Description: minimum autoscaling number of tasks

  MaxTasksNumber:
    Default: 6
    Type: Number
    Description: maximum autoscaling number of tasks

  SanitizeMode:
    Default: ESCAPING
    Type: String
    Description: Html Sanitize Mode

  FreeMarkerTemplateLoaderPath:
    Default: documents_composition_templates
    Type: String
    Description: directory in which html templates are found

  FreeMarkerSuffix:
    Default: .html
    Type: String
    Description: html template suffix

Resources:

  # PN-Radd-Fsu microservice
  RaddMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-radd-alt'
        CpuValue: !Ref CpuValue
        MemoryAmount: !Ref MemoryAmount
        HealthCheckTimeout: !Ref HealthCheckTimeout
        HealthCheckInterval: !Ref HealthCheckInterval
        HealthyThresholdCount: !Ref HealthyThresholdCount
        UnhealthyThresholdCount: !Ref UnhealthyThresholdCount
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: !Ref AutoscalingThreshold
        AutoscalingCheckPeriod: !Ref AutoscalingCheckPeriod
        MinTasksNumber: !Ref MinTasksNumber
        MaxTasksNumber: !Ref MaxTasksNumber
        AutoscalingDataPointN: !Ref AutoscalingDataPointN
        AutoscalingDataPointM: !Ref AutoscalingDataPointM
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'CORS_ALLOWED_DOMAINS=${CorsAllowedDomains}'
        ContainerEnvEntry3: !Sub 'AWS_DYNAMODB_TABLE=${RaddTransactionDynamoTableName}'
        ContainerEnvEntry4: 'PN_RADD_CLIENT_DATAVAULT_BASEPATH=http://alb.confidential.pn.internal:8080'
        ContainerEnvEntry5: !Sub 'PN_RADD_CLIENT_DELIVERY_BASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry6: !Sub 'PN_RADD_CLIENT_DELIVERY_PUSH_BASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry7: !Sub 'PN_RADD_CLIENT_DELIVERY_PUSH_INTERNAL_BASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry8: !Sub 'PN_RADD_CLIENT_SAFE_STORAGE_BASEPATH=${SandboxSafeStorageBaseUrl}'
        ContainerEnvEntry9: !Sub 'PN_RADD_SAFESTORAGECXID=${SafeStorageCxId}'
        ContainerEnvEntry10: !Sub 'PN_RADD_ATTEMPTBATCHWRITER=${AttemptBatchWriter}'
        ContainerEnvEntry11: !Sub 'PN_RADD_SAFESTORAGEDOCTYPE=${SafeStorageDocType}'
        ContainerEnvEntry12: !Sub 'AWS_DYNAMODB_IUNSOPERATIONS_TABLE=${OperationsDynamoTableName}'
        ContainerEnvEntry13: !Sub 'PN_RADD_APPLICATION_BASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry14: !Sub 'SANITIZE_MODE=${SanitizeMode}'
        ContainerEnvEntry15: !Sub 'SPRING_FREEMARKER_TEMPLATE_LOADER_PATH=${FreeMarkerTemplateLoaderPath}'
        ContainerEnvEntry16: !Sub 'SPRING_FREEMARKER_SUFFIX=${FreeMarkerSuffix}'

        MappedPaths: '/radd-net/*,/radd-net-private/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        AlbSecurityGroup: !Ref AlbSecurityGroup
        TaskRoleManagedPolicyArn: !Ref RaddMicroserviceTaskManagedPolicy
        EcsLogGroup: !Ref EcsLogGroup
        LogAlarmStrategyV1: FATAL

  # Grant operational rights to PN-RADD microservice
  RaddMicroserviceTaskManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ExecuteTransaction
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:TransactGetItems
              - dynamodb:TransactWriteItems
              - dynamodb:UpdateItem
            Resource:
              - !Sub "${RaddTransactionDynamoTableArn}"
              - !Sub "${RaddTransactionDynamoTableArn}/*"
              - !Sub "${OperationsDynamoTableArn}"
              - !Sub "${OperationsDynamoTableArn}/*"
            
  # Expose PN-Radd-Alt microservice public API with API-GW for RADD usage
  RaddAltMicroservicePublicAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-expose-service-openapi.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-radd-alt'
        IntendedUsage: RADD
        DnsName: !Ref ApiDnsName
        ProjectName: !Ref ProjectName
        ServiceApiPath: 'radd-net'
        NetworkLoadBalancerLink: !Ref NetworkLoadBalancerLink
        ApplicationLoadBalancerDomain: !Ref ApplicationLoadBalancerDomain
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        OpenApiBucketName: !Ref MicroserviceBucketName
        OpenApiBucketKey: !Sub ${MicroserviceBucketBaseKey}/docs/openapi/aws/api-radd-net-RADD-aws.yaml
        
  # Dashboard
  RaddAltMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-radd-alt"
        DynamoDBTableNames: !Join
          - ','
          - - !Ref RaddTransactionDynamoTableName
            - !Ref OperationsDynamoTableName
        AlarmArns: !Join
          - ','
          - - !GetAtt RaddMicroservice.Outputs.FatalLogsMetricAlarmArn